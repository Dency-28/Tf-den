name: Terraform CI/CD 

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
  pull_request:
    branches:
      - testing
  push:
    branches:
      - testing

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  terraform:
    if: >
      github.event.issue.pull_request &&
      (
        contains(github.event.comment.body, '/plan') ||
        contains(github.event.comment.body, '/apply')
      )
    name: Terraform Plan & Apply (Testing)
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      # Step 1️⃣: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2️⃣: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3️⃣: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4️⃣: Extract PR Number
      - name: Get PR Number
        id: get_pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open

      # ───────────────────────────────
      # Step 5️⃣: Terraform Backend Apply
      # ───────────────────────────────
      - name: Terraform Init (Backend)
        run: terraform -chdir=terraform_backend init

      - name: Terraform Apply (Backend)
        run: terraform -chdir=terraform_backend apply -auto-approve | tee backend_apply.txt

      - name: Post Backend Apply Output to PR
        if: steps.get_pr.outputs.number != '' && success()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr.outputs.number }}
          header: 🧱 Terraform Backend Apply Output
          path: backend_apply.txt
          recreate: true
          ignore_empty: true

      # ───────────────────────────────
      # Step 6️⃣: Terraform Infra Plan/Apply
      # ───────────────────────────────
      - name: Terraform Init (Infra)
        run: terraform -chdir=terraform_infra init -reconfigure

      - name: Terraform Validate (Infra)
        run: terraform -chdir=terraform_infra validate

      - name: Terraform Plan or Apply (Infra)
        run: |
          if [[ "${{ github.event.comment.body }}" == *"/plan"* ]]; then
            terraform -chdir=terraform_infra plan -no-color | tee plan_output.txt
            echo '### 📝 Terraform Plan Result' > tf_comment.md
          else
            terraform -chdir=terraform_infra apply -auto-approve -no-color | tee plan_output.txt
            echo '### 🚀 Terraform Apply Result' > tf_comment.md
          fi
          echo '<details><summary>Click to view logs</summary>' >> tf_comment.md
          echo '' >> tf_comment.md
          echo '```' >> tf_comment.md
          cat plan_output.txt >> tf_comment.md
          echo '```' >> tf_comment.md
          echo '</details>' >> tf_comment.md

      - name: Post Terraform Plan/Apply Output to PR
        if: steps.get_pr.outputs.number != '' && success()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr.outputs.number }}
          header: 💬 Terraform Plan/Apply Output
          path: tf_comment.md
          recreate: true
          ignore_empty: true

      # ───────────────────────────────
      # Step 7️⃣: Terraform Outputs
      # ───────────────────────────────
      - name: Terraform Output Values
        if: success() && contains(github.event.comment.body, '/apply')
        run: |
          terraform -chdir=terraform_infra output -json > tf_outputs.json
          terraform -chdir=terraform_infra output > tf_outputs.txt
          echo '### 🌐 Terraform Output Values' > output_comment.md
          echo '```' >> output_comment.md
          cat tf_outputs.txt >> output_comment.md
          echo '```' >> output_comment.md

      - name: Post Terraform Outputs to PR
        if: steps.get_pr.outputs.number != '' && success() && contains(github.event.comment.body, '/apply')
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr.outputs.number }}
          header: 🌐 Terraform Outputs (Public IP, DNS, etc.)
          path: output_comment.md
          recreate: true
          ignore_empty: true
