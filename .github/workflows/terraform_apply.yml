name: Terraform CI/CD (Testing Branch)

on:
  pull_request:
    branches: [testing]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform Plan & Apply (Testing)

    steps:
      - name: 🧩 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: 💬 Detect Command (/plan or /apply)
        id: detect
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            COMMENT=$(echo "${{ github.event.comment.body }}" | tr '[:upper:]' '[:lower:]')
            if [[ "$COMMENT" == "/plan" ]]; then
              echo "action=plan" >> $GITHUB_OUTPUT
            elif [[ "$COMMENT" == "/apply" ]]; then
              echo "action=apply" >> $GITHUB_OUTPUT
            else
              echo "action=none" >> $GITHUB_OUTPUT
            fi
          else
            echo "action=plan" >> $GITHUB_OUTPUT
          fi

      - name: 🛑 Skip if not /plan or /apply
        if: ${{ steps.detect.outputs.action == 'none' }}
        run: echo "No terraform action required."

      - name: 🗂️ Set Working Directory
        id: setdir
        run: echo "dir=terraform_infra" >> $GITHUB_OUTPUT

      # ───────────────
      # PLAN (No backend, no rename, backend.tf ignored dynamically)
      # ───────────────
      - name: 🧩 Run Terraform Plan (Ignore backend)
        if: ${{ steps.detect.outputs.action == 'plan' }}
        run: |
          cd ${{ steps.setdir.outputs.dir }}
          
          echo "⚙️ Creating temporary terraform_no_backend.tf..."
          echo 'terraform { backend "local" {} }' > terraform_no_backend.tf

          echo "🧩 Initializing Terraform (local backend override)"
          terraform init -input=false -backend-config="path=/tmp/dummy.tfstate" >/dev/null

          echo "✅ Validating configuration"
          terraform validate

          echo "🧮 Generating plan (no backend used)"
          terraform plan -no-color -input=false -out=tfplan > plan.txt || true

          echo "🧩 Posting plan result to PR..."
          {
            echo "### 🧩 Terraform Plan Output"
            echo "<details><summary>Click to view</summary>"
            echo ""
            echo '```'
            cat plan.txt
            echo '```'
            echo "</details>"
          } > ../plan_comment.md

      - name: 💬 Comment Plan Output
        if: ${{ steps.detect.outputs.action == 'plan' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-plan
          path: ${{ steps.setdir.outputs.dir }}/../plan_comment.md

      # ───────────────
      # APPLY (Uses backend normally)
      # ───────────────
      - name: ⚙️ Terraform Init (With backend)
        if: ${{ steps.detect.outputs.action == 'apply' }}
        run: |
          cd ${{ steps.setdir.outputs.dir }}
          terraform init -input=false -reconfigure

      - name: 🚀 Terraform Apply
        if: ${{ steps.detect.outputs.action == 'apply' }}
        run: |
          cd ${{ steps.setdir.outputs.dir }}
          terraform apply -auto-approve -input=false
