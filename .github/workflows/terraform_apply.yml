name: Terraform CI/CD (Test Branch)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      issues: write

    env:
      AWS_REGION: us-east-1
      REPO: ${{ github.repository }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if comment is /apply
        run: |
          COMMENT="${{ github.event.comment.body }}"
          echo "User comment: $COMMENT"
          if echo "$COMMENT" | grep -q '^/apply'; then
            echo "‚úÖ Detected /apply command. Proceeding..."
          else
            echo "‚ùå Not an /apply comment. Exiting workflow."
            exit 0
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Backend Init & Apply
        run: |
          terraform -chdir=terraform_backend init -input=false
          terraform -chdir=terraform_backend apply -auto-approve

      - name: Terraform Plan
        run: |
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra fmt
          terraform -chdir=terraform_infra validate
          terraform -chdir=terraform_infra plan -no-color -out=tfplan | tee plan.txt
          {
            echo '### üß© Terraform Plan Result'
            echo '<details><summary>Click to view full plan logs</summary>'
            echo ''
            echo '```'
            cat plan.txt
            echo '```'
            echo '</details>'
          } > plan_comment.md

      - name: Post Plan Output to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Posting plan to PR #${ISSUE_NUMBER}"
          BODY_JSON=$(jq -Rs '.' plan_comment.md)
          curl -sS -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/issues/${ISSUE_NUMBER}/comments" \
            -d "{\"body\": $BODY_JSON}"

      - name: Terraform Apply
        run: |
          terraform -chdir=terraform_infra apply -auto-approve tfplan | tee apply.txt
          {
            echo '### üöÄ Terraform Apply Result'
            echo '<details><summary>Click to view full apply logs</summary>'
            echo ''
            echo '```'
            cat apply.txt
            echo '```'
            echo '</details>'
          } > apply_comment.md

      - name: Post Apply Output to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Posting apply result to PR #${ISSUE_NUMBER}"
          BODY_JSON=$(jq -Rs '.' apply_comment.md)
          curl -sS -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/issues/${ISSUE_NUMBER}/comments" \
            -d "{\"body\": $BODY_JSON}"
