name: Terraform CI/CD (Test Branch)
 
on:
  pull_request:
    branches: [test]
  issue_comment:
    types: [created]
  workflow_dispatch:
 
jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest
 
    permissions:
      contents: read
      pull-requests: write
      issues: read
 
    env:
      AWS_REGION: us-east-1
 
    steps:
      # Checkout repo
      - uses: actions/checkout@v4
 
      # Setup Terraform
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
 
      # Configure AWS credentials
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
 
      # Get PR number (handles both pull_request and issue_comment)
      - name: Get PR Number
        id: get_pr_number
        run: |
          if [ "${{ github.event_name }}" == "issue_comment" ]; then
            echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          else
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          fi
        shell: bash
 
      # â”€â”€â”€ Backend Setup â”€â”€â”€
      - name: Init & Apply Backend
        run: |
          terraform -chdir=terraform_backend init -input=false
          terraform -chdir=terraform_backend apply -auto-approve
 
      # â”€â”€â”€ Infra Plan â”€â”€â”€
      - name: Terraform Plan
        id: plan
        run: |
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra fmt
          terraform -chdir=terraform_infra validate
          terraform -chdir=terraform_infra plan -no-color -out=tfplan | tee plan.txt
          {
            echo '### ðŸ§© Terraform Plan Result'
            echo '<details><summary>Click to view full plan logs</summary>'
            echo ''
            echo '```'
            cat plan.txt
            echo '```'
            echo '</details>'
          } > plan_comment.md
 
      # Post Plan Output to PR
      - name: Post Plan Output
        if: success()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr_number.outputs.pr_number }}
          header: ðŸ§© Terraform Plan Output
          path: plan_comment.md
          recreate: true
 
      # â”€â”€â”€ Terraform Apply â”€â”€â”€
      - name: Terraform Apply
        if: |
          success() &&
          (
            github.event_name == 'workflow_dispatch' ||
            (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply'))
          )
        run: |
          terraform -chdir=terraform_infra apply -auto-approve tfplan | tee apply.txt
          {
            echo '### ðŸš€ Terraform Apply Result'
            echo '<details><summary>Click to view full apply logs</summary>'
            echo ''
            echo '```'
            cat apply.txt
            echo '```'
            echo '</details>'
          } > apply_comment.md
 
      # Post Apply Output to PR
      - name: Post Apply Output
        if: success()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr_number.outputs.pr_number }}
          header: ðŸš€ Terraform Apply Output
          path: apply_comment.md
          recreate: true
