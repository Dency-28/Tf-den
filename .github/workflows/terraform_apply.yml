name: Terraform CI/CD (Test Branch)

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
  issue_comment:
    types: [created]       # Enables apply from PR comment (/apply)
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    permissions:
      contents: read
      pull-requests: write   # Needed to post comments
      issues: read

    steps:
      # Step 1️⃣: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2️⃣: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3️⃣: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ───────────────────────────────
      # Step 1: Terraform Backend
      # ───────────────────────────────
      - name: Terraform Init (Backend)
        run: terraform -chdir=terraform_backend init

      - name: Terraform Apply (Backend)
        run: terraform -chdir=terraform_backend apply -auto-approve

      # ───────────────────────────────
      # Step 2: Terraform Infra Plan
      # ───────────────────────────────
      - name: Terraform Init (Infra)
        run: terraform -chdir=terraform_infra init -reconfigure

      - name: Terraform Format (Infra)
        run: terraform -chdir=terraform_infra fmt

      - name: Terraform Validate (Infra)
        run: terraform -chdir=terraform_infra validate

      - name: Terraform Plan (Infra)
        id: plan
        run: terraform -chdir=terraform_infra plan -no-color -out=tfplan | tee plan_output.txt

      # Step: Post Plan Output to PR (if PR exists)
      - name: Post Terraform Plan to PR
        if: github.event.pull_request.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: 🧩 Terraform Plan Output
          path: plan_output.txt
          recreate: true
          ignore_empty: true

      # ───────────────────────────────
      # Step 3: Terraform Apply
      # ───────────────────────────────
      - name: Terraform Apply (Infra)
        if: >
          success() &&
          (
            github.event_name == 'push' ||
            github.event_name == 'workflow_dispatch' ||
            (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply'))
          )
        run: terraform -chdir=terraform_infra apply -auto-approve tfplan | tee apply_output.txt

      # Step: Post Apply Output to PR (if PR exists)
      - name: Post Terraform Apply to PR
        if: >
          success() &&
          github.event.pull_request.number != '' &&
          (
            github.event_name == 'pull_request' ||
            (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply'))
          )
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: 🚀 Terraform Apply Output
          path: apply_output.txt
          recreate: true
          ignore_empty: true
