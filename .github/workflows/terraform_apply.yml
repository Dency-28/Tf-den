name: Terraform CI/CD (Testing Branch)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  terraform:
    if: |
      github.event.comment.body == '/plan'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 🧠 Temporarily disable backend.tf
      - name: Disable backend for plan
        run: |
          echo "🔧 Temporarily renaming backend.tf to disable backend..."
          if [ -f terraform_infra/backend.tf ]; then
            mv terraform_infra/backend.tf terraform_infra/backend.tf.disabled
          fi

      - name: Terraform Plan (Local mode, no backend)
        run: |
          cd terraform_infra
          echo "🧩 Running Terraform Plan (NO backend, local only)"
          terraform init -input=false
          terraform fmt -check
          terraform validate
          terraform plan -no-color -out=tfplan > ../plan_output.txt

      - name: Restore backend file
        if: always()
        run: |
          echo "🔁 Restoring backend.tf..."
          if [ -f terraform_infra/backend.tf.disabled ]; then
            mv terraform_infra/backend.tf.disabled terraform_infra/backend.tf
          fi

      - name: Comment plan output to PR
        if: always()
        run: |
          {
            echo '### 🧩 Terraform Plan Result (NO backend used)'
            echo '<details><summary>Click to view plan output</summary>'
            echo ''
            echo '```'
            cat plan_output.txt
            echo '```'
            echo '</details>'
          } > plan_comment.md

      - name: Post comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body-path: plan_comment.md
