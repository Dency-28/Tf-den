name: Terraform CI/CD (Test Branch)

on:
  pull_request:
    branches:
      - testing
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ============================================================
      # PLAN JOB (NO BACKEND)
      # ============================================================
      - name: Terraform Plan (Skip Backend)
        if: contains(github.event.comment.body, '/plan')
        id: plan
        run: |
          echo "🧩 Running Terraform Plan (Skipping backend setup)..."

          # Create a temporary folder to modify infra files
          mkdir tf_local && cp -r terraform_infra/* tf_local/
          cd tf_local

          echo "🧹 Removing backend blocks to disable S3 usage..."
          # Delete any backend "s3" blocks from *.tf files (safe multiline)
          find . -type f -name "*.tf" -exec sed -i '/backend *"s3"/,/}/d' {} \;

          echo "⚙️ Initializing Terraform (no backend)..."
          terraform init -backend=false -input=false -no-color

          echo "✅ Validating Terraform configuration..."
          terraform fmt -check -no-color
          terraform validate -no-color

          echo "🧩 Generating Terraform Plan (Local Mode)..."
          terraform plan -no-color -out=tfplan > plan.txt || true

          {
            echo '### 🧩 Terraform Plan (Local Mode - Backend Disabled)'
            echo '✅ Backend skipped successfully (S3/Dynamo not used)'
            echo '<details><summary>Click to view plan logs</summary>'
            echo ''
            echo '```'
            cat plan.txt
            echo '```'
            echo '</details>'
          } > ../plan_comment.md

      - name: Post Plan Output to PR
        if: contains(github.event.comment.body, '/plan')
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: plan_comment.md

      # ============================================================
      # APPLY JOB (WITH BACKEND)
      # ============================================================
      - name: Terraform Apply (Real Backend)
        if: contains(github.event.comment.body, '/apply')
        id: apply
        run: |
          echo "🚀 Running Terraform Apply (Using S3 Backend)..."
          cd terraform_infra

          echo "⚙️ Initializing Terraform with backend..."
          terraform init -reconfigure -input=false -no-color

          echo "✅ Validating configuration..."
          terraform validate -no-color

          echo "🚀 Applying Terraform changes..."
          terraform apply -auto-approve -no-color > apply.txt

          {
            echo '### 🚀 Terraform Apply Result'
            echo '<details><summary>Click to view apply logs</summary>'
            echo ''
            echo '```'
            cat apply.txt
            echo '```'
            echo '</details>'
          } > apply_comment.md

      - name: Post Apply Output to PR
        if: contains(github.event.comment.body, '/apply')
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: apply_comment.md
