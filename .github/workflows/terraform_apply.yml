name: Terraform CI/CD

on:
  push:
    branches:
      - test          # Run when changes are pushed to test
      - main          # Run again when merged to main
    paths:
      - 'terraform_backend/**'
      - 'terraform_infra/**'
      - '!**/.github/workflows/**'
  pull_request:
    branches:
      - main          # Trigger when PR is opened to merge test → main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Pipeline
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      issues: write

    env:
      AWS_REGION: us-east-1
      S3_BUCKET: tf-state-dency

    steps:
      # Step 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Step 3️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ───────────────────────────────
      # 🧱 Step 4: Terraform Backend
      # ───────────────────────────────
      - name: Terraform Init (Backend)
        run: terraform -chdir=terraform_backend init

      - name: Terraform Apply (Backend)
        run: terraform -chdir=terraform_backend apply -auto-approve

      # ✅ Step 4.1: Wait until S3 bucket exists (fixes race condition)
      - name: Wait for S3 backend to be ready
        run: |
          echo "⏳ Waiting until S3 bucket ${S3_BUCKET} is available..."
          for i in {1..10}; do
            if aws s3api head-bucket --bucket "${S3_BUCKET}" 2>/dev/null; then
              echo "✅ S3 bucket ${S3_BUCKET} is ready."
              exit 0
            else
              echo "⌛ Not ready yet... retrying in 10s..."
              sleep 10
            fi
          done
          echo "❌ S3 bucket ${S3_BUCKET} not found after waiting."
          exit 1

      # ───────────────────────────────
      # ☁️ Step 5: Terraform Infra
      # ───────────────────────────────
      - name: Terraform Init (Infra)
        run: terraform -chdir=terraform_infra init -reconfigure

      - name: Terraform Format (Infra)
        run: terraform -chdir=terraform_infra fmt -check

      - name: Terraform Validate (Infra)
        run: terraform -chdir=terraform_infra validate

      - name: Terraform Plan (Infra)
        run: terraform -chdir=terraform_infra plan -out=tfplan

      # 💬 Comment plan result on PR
      - name: Comment plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "✅ Terraform Plan executed successfully for **test branch**."
            });

      # ✅ Apply Infra only when merged to main
      - name: Terraform Apply (Infra)
        if: startsWith(github.ref, 'refs/heads/main')
        run: terraform -chdir=terraform_infra apply -auto-approve tfplan

      - name: Complete
        run: echo "✅ Terraform pipeline completed successfully!"
