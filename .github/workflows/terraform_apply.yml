name: Terraform CI/CD (testing Branch)
 
on:
  pull_request:
    branches:
      - testing
      - main
  issue_comment:
    types:
      - created
  workflow_dispatch:
 
permissions:
  contents: read
  pull-requests: write
  issues: write
 
jobs:
  terraform:
    name: Terraform Plan & Apply (PR Trigger)
    runs-on: ubuntu-latest
 
    env:
      AWS_REGION: us-east-1
 
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request != null &&
       (contains(github.event.comment.body, '/plan') ||
        contains(github.event.comment.body, '/apply')))
 
    steps:
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Checkout Repo â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Setup Terraform â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Configure AWS credentials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Get PR number â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - id: pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Backend Setup â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Init & Apply Backend
        run: |
          terraform -chdir=terraform_backend init -input=false
          terraform -chdir=terraform_backend apply -auto-approve
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Terraform Plan â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Terraform Plan
        id: plan
        if: |
          github.event_name == 'pull_request' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/plan'))
        run: |
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra fmt
          terraform -chdir=terraform_infra validate
          terraform -chdir=terraform_infra plan -no-color | tee plan.txt
          {
            echo '### ðŸ§© Terraform Plan Result'
            echo '<details><summary>Click to view full plan logs</summary>'
            echo ''
            echo '```hcl'
            cat plan.txt
            echo '```'
            echo '</details>'
          } > plan_comment.md
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Post Plan Output to PR â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Post Plan Output
        if: steps.plan.conclusion == 'success'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number || github.event.issue.number }}
          header: ðŸ§© Terraform Plan Output
          path: plan_comment.md
          recreate: true
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Terraform Apply â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Terraform Apply
        id: apply
        if: |
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply'))
        run: |
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra fmt
          terraform -chdir=terraform_infra validate
          terraform -chdir=terraform_infra apply -auto-approve -no-color | tee apply.txt
          {
            echo '### ðŸš€ Terraform Apply Result'
            echo '<details><summary>Click to view full apply logs</summary>'
            echo ''
            echo '```hcl'
            cat apply.txt
            echo '```'
            echo '</details>'
          } > apply_comment.md
 
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Post Apply Output to PR â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Post Apply Output
        if: steps.apply.conclusion == 'success'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number || github.event.issue.number }}
          header: ðŸš€ Terraform Apply Output
          path: apply_comment.md
          recreate: true
