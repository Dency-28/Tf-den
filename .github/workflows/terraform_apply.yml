name: Terraform CI/CD (Test Branch)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan or Apply (Backend & Infra)
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    permissions:
      contents: read
      pull-requests: write
      issues: read

    # ✅ Trigger only when someone comments "plan" or "apply"
    if: >
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'issue_comment' &&
        (
          contains(toLower(github.event.comment.body), 'plan') ||
          contains(toLower(github.event.comment.body), 'apply')
        )
      )

    steps:
      # Step 1️⃣: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2️⃣: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3️⃣: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4️⃣: Extract PR Number
      - name: Get PR Number
        id: get_pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open

      # ───────────────────────────────
      # Step 5: Terraform Backend (Plan or Apply)
      # ───────────────────────────────
      - name: Terraform Init (Backend)
        run: terraform -chdir=terraform_backend init

      - name: Terraform Plan (Backend)
        if: contains(toLower(github.event.comment.body), 'plan')
        run: |
          terraform -chdir=terraform_backend plan -no-color | tee backend_plan_output.txt
          echo '### 🧩 Terraform Backend Plan Result' > backend_plan_comment.md
          echo '<details><summary>Click to view full backend plan logs</summary>' >> backend_plan_comment.md
          echo '' >> backend_plan_comment.md
          echo '```' >> backend_plan_comment.md
          cat backend_plan_output.txt >> backend_plan_comment.md
          echo '```' >> backend_plan_comment.md
          echo '</details>' >> backend_plan_comment.md

      - name: Terraform Apply (Backend)
        if: contains(toLower(github.event.comment.body), 'apply')
        run: |
          terraform -chdir=terraform_backend apply -auto-approve | tee backend_apply_output.txt
          echo '### ⚙️ Terraform Backend Apply Result' > backend_apply_comment.md
          echo '<details><summary>Click to view full backend apply logs</summary>' >> backend_apply_comment.md
          echo '' >> backend_apply_comment.md
          echo '```' >> backend_apply_comment.md
          cat backend_apply_output.txt >> backend_apply_comment.md
          echo '```' >> backend_apply_comment.md
          echo '</details>' >> backend_apply_comment.md

      - name: Post Backend Output to PR
        if: steps.get_pr.outputs.number != '' && success()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr.outputs.number }}
          header: ⚙️ Terraform Backend Output
          path: ${{ contains(toLower(github.event.comment.body), 'apply') && 'backend_apply_comment.md' || 'backend_plan_comment.md' }}
          recreate: true
          ignore_empty: true

      # ───────────────────────────────
      # Step 6: Terraform Infra (Plan or Apply)
      # ───────────────────────────────
      - name: Terraform Init (Infra)
        run: terraform -chdir=terraform_infra init -reconfigure

      - name: Terraform Format (Infra)
        run: terraform -chdir=terraform_infra fmt

      - name: Terraform Validate (Infra)
        run: terraform -chdir=terraform_infra validate

      - name: Terraform Plan (Infra)
        if: contains(toLower(github.event.comment.body), 'plan')
        run: |
          terraform -chdir=terraform_infra plan -no-color | tee infra_plan_output.txt
          echo '### 🧩 Terraform Infra Plan Result' > infra_plan_comment.md
          echo '<details><summary>Click to view full infra plan logs</summary>' >> infra_plan_comment.md
          echo '' >> infra_plan_comment.md
          echo '```' >> infra_plan_comment.md
          cat infra_plan_output.txt >> infra_plan_comment.md
          echo '```' >> infra_plan_comment.md
          echo '</details>' >> infra_plan_comment.md

      - name: Terraform Apply (Infra)
        if: contains(toLower(github.event.comment.body), 'apply')
        run: |
          terraform -chdir=terraform_infra plan -no-color -out=tfplan
          terraform -chdir=terraform_infra apply -auto-approve tfplan | tee infra_apply_output.txt
          echo '### 🚀 Terraform Infra Apply Result' > infra_apply_comment.md
          echo '<details><summary>Click to view full infra apply logs</summary>' >> infra_apply_comment.md
          echo '' >> infra_apply_comment.md
          echo '```' >> infra_apply_comment.md
          cat infra_apply_output.txt >> infra_apply_comment.md
          echo '```' >> infra_apply_comment.md
          echo '</details>' >> infra_apply_comment.md

      - name: Post Infra Output to PR
        if: steps.get_pr.outputs.number != '' && success()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get_pr.outputs.number }}
          header: 🚀 Terraform Infra Output
          path: ${{ contains(toLower(github.event.comment.body), 'apply') && 'infra_apply_comment.md' || 'infra_plan_comment.md' }}
          recreate: true
          ignore_empty: true
