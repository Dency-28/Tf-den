name: Terraform CI/CD (Testing Branch)

on:
  pull_request:
    branches: [testing]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Detect PR number
        id: pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open

      - name: Detect command (/plan or /apply)
        id: detect
        run: |
          ACTION="none"
          if [ "$GITHUB_EVENT_NAME" = "issue_comment" ]; then
            BODY=$(jq -r .comment.body "$GITHUB_EVENT_PATH" | tr '[:upper:]' '[:lower:]')
            if echo "$BODY" | grep -q "^/plan"; then ACTION="plan"; fi
            if echo "$BODY" | grep -q "^/apply"; then ACTION="apply"; fi
          else
            ACTION="plan"
          fi
          echo "action=$ACTION" >> $GITHUB_OUTPUT

      - name: Stop if not plan or apply
        if: ${{ steps.detect.outputs.action == 'none' }}
        run: echo "No /plan or /apply detected. Exiting."

      ########################
      # PLAN (Skip backend)
      ########################
      - name: Terraform Plan (Skip backend)
        if: ${{ steps.detect.outputs.action == 'plan' }}
        run: |
          set -e
          echo "ğŸ§© Running Terraform Plan (Skipping backend init)"
          mkdir tf_local
          cp -r terraform_infra/* tf_local/

          echo "ğŸ“¦ Removing backend block from Terraform configs..."
          find tf_local -name "*.tf" -type f -exec sed -i '/backend "s3"/,/}/d' {} \;

          cd tf_local
          terraform init -backend=false -input=false -no-color
          terraform validate -no-color
          terraform plan -no-color -input=false | tee ../plan.txt || true

          echo "### ğŸ§© Terraform Plan (Local mode - backend skipped)" > ../plan_comment.md
          echo "\`\`\`" >> ../plan_comment.md
          cat ../plan.txt >> ../plan_comment.md
          echo "\`\`\`" >> ../plan_comment.md

      - name: Post Plan to PR
        if: ${{ steps.detect.outputs.action == 'plan' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.pr.outputs.number }}
          header: "ğŸ§© Terraform Plan Output"
          path: plan_comment.md

      ########################
      # APPLY (Real backend)
      ########################
      - name: Terraform Apply
        if: ${{ steps.detect.outputs.action == 'apply' }}
        run: |
          set -e
          echo "ğŸš€ Running Terraform Apply (with backend)"
          cd terraform_infra
          terraform init -reconfigure -input=false -no-color
          terraform validate -no-color
          terraform apply -auto-approve -input=false | tee ../apply.txt || true

          echo "### ğŸš€ Terraform Apply Output" > ../apply_comment.md
          echo "\`\`\`" >> ../apply_comment.md
          cat ../apply.txt >> ../apply_comment.md
          echo "\`\`\`" >> ../apply_comment.md

      - name: Post Apply to PR
        if: ${{ steps.detect.outputs.action == 'apply' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.pr.outputs.number }}
          header: "ğŸš€ Terraform Apply Output"
          path: apply_comment.md
