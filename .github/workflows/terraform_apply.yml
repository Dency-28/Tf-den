name: Terraform CI/CD (Test Branch)

on:
  pull_request:
    branches: [testing]
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      issues: read

    env:
      AWS_REGION: us-east-1

    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
        (contains(github.event.comment.body, '/plan') ||
         contains(github.event.comment.body, '/apply')))

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open

      # Backend init (ignore S3)
      - name: Init Backend (Skip errors)
        run: terraform -chdir=terraform_backend init -input=false || true

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ PLAN â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Terraform Plan
        id: plan
        if: |
          github.event_name == 'pull_request' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/plan'))
        run: |
          terraform -chdir=terraform_infra init -backend=false -reconfigure
          terraform -chdir=terraform_infra fmt
          terraform -chdir=terraform_infra validate
          terraform -chdir=terraform_infra plan -no-color -out=tfplan | tee plan.txt
          {
            echo '### ðŸ§© Terraform Plan Result'
            echo '<details><summary>Click to view plan logs</summary>'
            echo ''
            echo '```'
            cat plan.txt
            echo '```'
            echo '</details>'
          } > plan_comment.md

      # ðŸ§± Always Post Plan Output to PR
      - name: Post Plan Output to PR
        if: steps.plan.outcome == 'success' && steps.pr.outputs.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number }}
          header: ðŸ§© Terraform Plan Output
          path: plan_comment.md
          recreate: true

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ APPLY â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Terraform Apply
        id: apply
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply')
        run: |
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra apply -auto-approve tfplan | tee apply.txt
          {
            echo '### ðŸš€ Terraform Apply Result'
            echo '<details><summary>Click to view apply logs</summary>'
            echo ''
            echo '```'
            cat apply.txt
            echo '```'
            echo '</details>'
          } > apply_comment.md

      - name: Post Apply Output to PR
        if: steps.apply.outcome == 'success' && steps.pr.outputs.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number }}
          header: ðŸš€ Terraform Apply Output
          path: apply_comment.md
          recreate: true
