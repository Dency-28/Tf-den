name: Terraform CI/CD (Test Branch)

on:
  pull_request:
    branches: [testing]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
        (contains(github.event.comment.body, '/plan') ||
         contains(github.event.comment.body, '/apply')))

    steps:
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Checkout â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Checkout Repository
        uses: actions/checkout@v4

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Setup Terraform â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ AWS Credentials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Get PR Number â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - id: pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open

      # ======================================================
      # ðŸ§© Terraform PLAN â€” triggered by /plan or manual run
      # ======================================================
      - name: Terraform Backend Plan
        id: backend_plan
        if: |
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/plan'))
        run: |
          terraform -chdir=terraform_backend init -reconfigure
          terraform -chdir=terraform_backend plan -no-color -out=backend.tfplan | tee backend_plan.txt
          {
            echo '### ðŸ§© Terraform Backend Plan'
            echo '<details><summary>View Backend Plan Logs</summary>'
            echo ''
            echo '```'
            cat backend_plan.txt
            echo '```'
            echo '</details>'
          } > backend_plan_comment.md

      - name: Terraform Infra Plan
        id: infra_plan
        if: |
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/plan'))
        run: |
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra fmt
          terraform -chdir=terraform_infra validate
          terraform -chdir=terraform_infra plan -no-color -out=infra.tfplan | tee infra_plan.txt
          {
            echo '### ðŸ§© Terraform Infra Plan'
            echo '<details><summary>View Infra Plan Logs</summary>'
            echo ''
            echo '```'
            cat infra_plan.txt
            echo '```'
            echo '</details>'
          } > infra_plan_comment.md

      - name: Post Plan Output to PR
        if: steps.pr.outputs.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number }}
          header: ðŸ§© Terraform Plan Output
          path: |
            backend_plan_comment.md
            infra_plan_comment.md
          recreate: true

      # ======================================================
      # ðŸš€ Terraform APPLY â€” triggered by /apply or manual run
      # ======================================================
      - name: Terraform Backend Apply
        id: backend_apply
        if: |
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply'))
        run: |
          terraform -chdir=terraform_backend apply -auto-approve backend.tfplan | tee backend_apply.txt
          {
            echo '### ðŸš€ Terraform Backend Apply'
            echo '<details><summary>View Backend Apply Logs</summary>'
            echo ''
            echo '```'
            cat backend_apply.txt
            echo '```'
            echo '</details>'
          } > backend_apply_comment.md

      - name: Terraform Infra Apply
        id: infra_apply
        if: |
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply'))
        run: |
          terraform -chdir=terraform_infra apply -auto-approve infra.tfplan | tee infra_apply.txt
          {
            echo '### ðŸš€ Terraform Infra Apply'
            echo '<details><summary>View Infra Apply Logs</summary>'
            echo ''
            echo '```'
            cat infra_apply.txt
            echo '```'
            echo '</details>'
          } > infra_apply_comment.md

      - name: Post Apply Output to PR
        if: steps.pr.outputs.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number }}
          header: ðŸš€ Terraform Apply Output
          path: |
            backend_apply_comment.md
            infra_apply_comment.md
          recreate: true
