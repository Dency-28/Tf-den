name: Terraform CI/CD

on:
  pull_request:
    branches:
      - testing
      - main
  issue_comment:
    types:
      - created
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  terraform:
    name: Terraform Plan & Apply (Test)
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          state: open

      # ─── INFRA PLAN (/plan) — No backend, no S3/Dynamo ───
      - name: Terraform Infra Plan (No Backend)
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '/plan')
        id: infra_plan
        run: |
          echo "🧩 Running Terraform Plan without backend"

          # Copy infra folder to temp path
          cp -r terraform_infra terraform_infra_nobackend

          # Remove backend block dynamically (no file modification in repo)
          sed -i '/backend *"s3" *{/,/}/d' terraform_infra_nobackend/*.tf || true

          terraform -chdir=terraform_infra_nobackend init -backend=false -input=false
          terraform -chdir=terraform_infra_nobackend fmt
          terraform -chdir=terraform_infra_nobackend validate
          terraform -chdir=terraform_infra_nobackend plan -no-color -out=infra_plan | tee infra_plan.txt

          {
            echo '### 🧩 Terraform Infra Plan Result (/plan)'
            echo '<details><summary>Click to view plan logs</summary>'
            echo ''
            echo '```'
            cat infra_plan.txt
            echo '```'
            echo '</details>'
          } > infra_plan_comment.md

      - name: Post Infra Plan Output
        if: steps.infra_plan.conclusion == 'success' && steps.pr.outputs.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number }}
          header: 🧩 Terraform Infra Plan Output (/plan)
          path: infra_plan_comment.md
          recreate: true

      # ─── APPLY (creates backend + infra normally) ───
      - name: Terraform Apply (/apply)
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply')
        id: apply
        run: |
          echo "🚀 Running Terraform Apply (creates backend + infra)"

          # 1️⃣ Create backend first
          terraform -chdir=terraform_backend init -input=false
          terraform -chdir=terraform_backend apply -auto-approve

          # 2️⃣ Apply infra using real backend
          terraform -chdir=terraform_infra init -reconfigure
          terraform -chdir=terraform_infra apply -auto-approve | tee apply.txt

          {
            echo '### 🚀 Terraform Infra Apply Result (/apply)'
            echo '<details><summary>Click to view full apply logs</summary>'
            echo ''
            echo '```'
            cat apply.txt
            echo '```'
            echo '</details>'
          } > apply_comment.md

      - name: Post Apply Output
        if: steps.apply.conclusion == 'success' && steps.pr.outputs.number != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.number }}
          header: 🚀 Terraform Infra Apply Output (/apply)
          path: apply_comment.md
          recreate: true
