name: Terraform Destroy (Full Cleanup)

on:
  workflow_dispatch:

jobs:
  terraform-destroy:
    name: Terraform Full Destroy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      # Step 1️⃣: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2️⃣: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3️⃣: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ───────────────────────────────
      # Step 1: Initialize backend to read outputs
      # ───────────────────────────────
      - name: Terraform Init (Backend)
        run: terraform -chdir=terraform_backend init -reconfigure

      - name: Get Backend Info (S3 + DynamoDB)
        id: backend-info
        run: |
          set -e
          echo "Fetching S3 bucket and DynamoDB table from backend outputs..."
          BUCKET_NAME=$(terraform -chdir=terraform_backend output -raw s3_bucket_name || echo "")
          DYNAMO_TABLE=$(terraform -chdir=terraform_backend output -raw dynamodb_table_name || echo "")
          echo "bucket=$BUCKET_NAME" >> $GITHUB_OUTPUT
          echo "table=$DYNAMO_TABLE" >> $GITHUB_OUTPUT

      # ───────────────────────────────
      # Step 2: Force delete backend (S3 + DynamoDB)
      # ───────────────────────────────
      - name: Force Delete S3 and DynamoDB
        if: ${{ steps.backend-info.outputs.bucket != '' || steps.backend-info.outputs.table != '' }}
        run: |
          set -e
          BUCKET_NAME=${{ steps.backend-info.outputs.bucket }}
          DYNAMO_TABLE=${{ steps.backend-info.outputs.table }}

          echo "🧹 Cleaning up backend..."
          if [ -n "$BUCKET_NAME" ]; then
            echo "Deleting all objects from S3 bucket: $BUCKET_NAME"
            aws s3 rm s3://$BUCKET_NAME --recursive || true
            echo "Deleting S3 bucket: $BUCKET_NAME"
            aws s3 rb s3://$BUCKET_NAME --force || true
          fi

          if [ -n "$DYNAMO_TABLE" ]; then
            echo "Deleting DynamoDB table: $DYNAMO_TABLE"
            aws dynamodb delete-table --table-name "$DYNAMO_TABLE" || true
          fi
          echo "✅ Backend (S3 + DynamoDB) deleted successfully!"

      # ───────────────────────────────
      # Step 3: Reconfigure terraform_infra (local state)
      # ───────────────────────────────
      - name: Switch terraform_infra to local backend
        run: |
          echo "Reconfiguring terraform_infra to use local backend..."
          cd terraform_infra
          rm -f backend.tf
          cat <<EOF > backend_override.tf
          terraform {
            backend "local" {
              path = "./local.tfstate"
            }
          }
          EOF

      - name: Terraform Init (Infra - Local)
        run: terraform -chdir=terraform_infra init -reconfigure

      # ───────────────────────────────
      # Step 4: Destroy Infrastructure
      # ───────────────────────────────
      - name: Terraform Plan Destroy (Infra)
        run: terraform -chdir=terraform_infra plan -destroy -out=tfdestroyplan

      - name: Terraform Destroy (Infra)
        run: terraform -chdir=terraform_infra apply -auto-approve tfdestroyplan

      # ───────────────────────────────
      # Step 5: Final cleanup confirmation
      # ───────────────────────────────
      - name: Verify Cleanup
        run: |
          echo "✅ Terraform destroy completed successfully."
          echo "All backend (S3 + DynamoDB) and infra resources are deleted."
