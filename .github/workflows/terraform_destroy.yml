name: Terraform Destroy

on:
  workflow_dispatch:

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Initialize Terraform (ignore backend errors)
        run: |
          set +e
          echo "Initializing Terraform..."
          terraform init -backend=false || true

      - name: Force Unlock (optional)
        run: |
          set +e
          terraform force-unlock -force $(terraform show -json | jq -r '.lock_id // empty') || true
          echo "Force unlock done or not required"

      - name: Destroy Infrastructure (ignore missing S3/Dynamo)
        run: |
          set +e
          echo "Attempting to destroy infrastructure..."
          terraform destroy -auto-approve || echo "⚠️ Destroy failed or partially done, continuing..."

      - name: Cleanup DynamoDB Table (if still exists)
        run: |
          set +e
          aws dynamodb delete-table --table-name tf-state-lock || echo "No DynamoDB table found, skipping..."

      - name: Cleanup S3 Bucket (if still exists)
        run: |
          set +e
          aws s3 rb s3://tf-state-dency --force || echo "No S3 bucket found, skipping..."
