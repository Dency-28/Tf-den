name: Terraform Destroy

on:
  workflow_dispatch:   # Run manually from GitHub Actions tab

jobs:
  terraform-destroy:
    name: Terraform Destroy Job
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      # Step 1Ô∏è‚É£: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2Ô∏è‚É£: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3Ô∏è‚É£: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4Ô∏è‚É£: Initialize Terraform (Infra only)
      - name: Terraform Init (Infra)
        run: terraform -chdir=terraform_infra init -reconfigure

      # Step 5Ô∏è‚É£: Check if any resources exist
      - name: Check if resources exist
        id: check
        run: |
          terraform -chdir=terraform_infra state list || echo "empty" > state_status.txt
          if grep -q "empty" state_status.txt; then
            echo "status=empty" >> $GITHUB_OUTPUT
          else
            echo "status=has_resources" >> $GITHUB_OUTPUT
          fi

      # Step 6Ô∏è‚É£: Destroy resources if they exist
      - name: Terraform Destroy (Infra)
        if: steps.check.outputs.status == 'has_resources'
        run: terraform -chdir=terraform_infra destroy -auto-approve

      # Step 7Ô∏è‚É£: Print message if nothing to destroy
      - name: Skip destroy (nothing to delete)
        if: steps.check.outputs.status == 'empty'
        run: echo "‚úÖ Nothing to destroy. Resources already deleted."

      # Step 8Ô∏è‚É£: Cleanup confirmation
      - name: Verify Cleanup
        run: |
          echo "üßπ Checking state after destroy..."
          terraform -chdir=terraform_infra state list || echo "State file clean. Nothing remains."
