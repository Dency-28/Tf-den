name: Terraform Destroy (Full Cleanup)

on:
  workflow_dispatch:

jobs:
  terraform-destroy:
    name: Terraform Full Destroy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      # Step 1️⃣: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2️⃣: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3️⃣: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ───────────────────────────────
      # Step 4️⃣: Destroy Infrastructure First
      # ───────────────────────────────
      - name: Terraform Init (Infra)
        run: terraform -chdir=terraform_infra init -reconfigure

      - name: Terraform Plan Destroy (Infra)
        run: terraform -chdir=terraform_infra plan -destroy -out=tfdestroyplan

      - name: Terraform Destroy (Infra)
        run: terraform -chdir=terraform_infra apply -auto-approve tfdestroyplan

      # ───────────────────────────────
      # Step 5️⃣: Parse Backend Info from backend_setup.tf
      # ───────────────────────────────
      - name: Parse Backend Config
        id: parse-backend
        shell: bash
        run: |
          set -e
          echo "Reading backend config from terraform_backend/backend_setup.tf..."
          FILE="terraform_backend/backend_setup.tf"
          BUCKET_NAME=$(grep -E 'bucket *= *"' "$FILE" | sed -E 's/.*bucket *= *"([^"]*)".*/\1/' | head -n 1 || echo "")
          DYNAMO_TABLE=$(grep -E 'dynamodb_table *= *"' "$FILE" | sed -E 's/.*dynamodb_table *= *"([^"]*)".*/\1/' | head -n 1 || echo "")
          echo "bucket=$BUCKET_NAME" >> "$GITHUB_OUTPUT"
          echo "table=$DYNAMO_TABLE" >> "$GITHUB_OUTPUT"
          echo "✅ Detected bucket: $BUCKET_NAME"
          echo "✅ Detected DynamoDB table: $DYNAMO_TABLE"

      # ───────────────────────────────
      # Step 6️⃣: Force Delete S3 & DynamoDB (Backend)
      # ───────────────────────────────
      - name: Force Delete S3 and DynamoDB
        if: ${{ steps.parse-backend.outputs.bucket != '' || steps.parse-backend.outputs.table != '' }}
        shell: bash
        run: |
          set -e
          BUCKET_NAME="${{ steps.parse-backend.outputs.bucket }}"
          DYNAMO_TABLE="${{ steps.parse-backend.outputs.table }}"

          echo "🧹 Cleaning up backend..."
          if [ -n "$BUCKET_NAME" ]; then
            echo "Deleting all objects from S3 bucket: $BUCKET_NAME"
            aws s3 rm "s3://$BUCKET_NAME" --recursive || true
            echo "Deleting S3 bucket: $BUCKET_NAME"
            aws s3 rb "s3://$BUCKET_NAME" --force || true
          fi

          if [ -n "$DYNAMO_TABLE" ]; then
            echo "Deleting DynamoDB table: $DYNAMO_TABLE"
            aws dynamodb delete-table --table-name "$DYNAMO_TABLE" || true
          fi

          echo "✅ Backend (S3 + DynamoDB) deleted successfully!"

      # ───────────────────────────────
      # Step 7️⃣: Final Confirmation
      # ───────────────────────────────
      - name: Verify Cleanup
        run: |
          echo "✅ Terraform destroy completed successfully."
          echo "All infrastructure and backend resources are now deleted."
